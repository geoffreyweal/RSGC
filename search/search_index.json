{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"The Remove SideGroups from Crystals (RSGC) Program","text":"<p>Authors: Dr. Geoffrey Weal<sup>*,\u2020</sup>, Dr. Chayanit Wechwithayakhlung<sup>\u2020</sup>, Dr. Josh Sutton<sup>*</sup>, Dr. Daniel Packwood<sup>\u2020</sup>, Dr. Paul Hume<sup>*</sup>, Prof. Justin Hodgkiss<sup>*</sup></p> <p><sup>*</sup> Victoria University of Wellington, Wellington, New Zealand; The MacDiarmid Institute for Advanced Materials and Nanotechnology, Wellington, New Zealand. </p> <p><sup>\u2020</sup> Institute for Integrated Cell-Material Sciences (iCeMS), Kyoto University, Kyoto, Japan.</p> <p>Group pages: https://people.wgtn.ac.nz/paul.hume/grants, https://www.packwood.icems.kyoto-u.ac.jp/, https://people.wgtn.ac.nz/justin.hodgkiss/grants</p>"},{"location":"index.html#what-is-the-remove-sidegroups-from-crystals-rsgc-program","title":"What is the Remove SideGroups from Crystals (RSGC) Program","text":"<p>The Remove SideGroups from Crystals (RSGC) program is designed to remove sidegroups from the molecules in your crystals. In particular, this program is designed to remove saturated aliphatic side-chains from molecules in crystals. </p> <p>This program was originally designed to remove saturated straight-chain aliphatic side-chains that only contain carbons and hydrogens that should not affect the excited-state properties of these molecules, such as visible-light adsorption and charge/energy transfer. </p>"},{"location":"index.html#installation","title":"Installation","text":"<p>It is recommended to read the installation page before using the RSGC program. See Installation: Setting Up RSGC and Pre-Requisites Packages for more information. Note that you can install RSGC through <code>pip3</code> and <code>conda</code>. </p>"},{"location":"index.html#guide-to-using-rsgc","title":"Guide To Using RSGC","text":"<p>The RSGC program is one in a series of programs that are designed to be used in the workflow shown below. After you have installed RSGC, see How To Use The RSGC Program to learn about how to use this program. </p>"},{"location":"index.html#the-grand-scheme","title":"The Grand Scheme","text":"<p>The RSGC program is used as part of a grand scheme for calculating the excited-state electronic properties of molecules in a crystal. This includes simulations of exciton and charge diffusion through crystal structures, in particular for organic molecules (but not limited to them). This scheme is shown below, along with where the RSGC program is used in this scheme. </p> <p> </p>"},{"location":"Installation.html","title":"Installation","text":"<p>In this article, we will look at how to install the RSGC program and all requisites required for this program.</p>"},{"location":"Installation.html#pre-requisites","title":"Pre-requisites","text":""},{"location":"Installation.html#python-3-and-pip3","title":"Python 3 and <code>pip3</code>","text":"<p>This program is designed to work with Python 3. This program can only be used with Python 3.7. This is because the CSD Python API can only run using Python 3.7. </p> <p>To find out if you have Python 3 on your computer and what version you have, type into the terminal</p> <pre><code>python --version\n</code></pre> <p>If you have Python 3 on your computer, you will get the version of python you have on your computer. E.g.</p> <pre><code>user@computer_name path % python --version\nPython 3.7.9\n</code></pre> <p>If you have Python 3, you may have <code>pip</code> installed on your computer as well. <code>pip</code> is a python package installation tool that is recommended by Python for installing Python packages. To see if you have <code>pip</code> installed, type into the terminal</p> <p><pre><code>pip list\n</code></pre> If you get back a list of python packages install on your computer, you have <code>pip</code> installed. E.g.</p> <pre><code>user@computer_name Documentation % pip3 list\nPackage                       Version\n----------------------------- ---------\nalabaster                     0.7.12\nasap3                         3.11.10\nase                           3.20.1\nBabel                         2.8.0\ncertifi                       2020.6.20\nchardet                       3.0.4\nclick                         7.1.2\ncycler                        0.10.0\ndocutils                      0.16\nFlask                         1.1.2\nidna                          2.10\nimagesize                     1.2.0\nitsdangerous                  1.1.0\nJinja2                        2.11.2\nkiwisolver                    1.2.0\nMarkupSafe                    1.1.1\nmatplotlib                    3.3.1\nnumpy                         1.19.1\npackaging                     20.4\nPillow                        7.2.0\npip                           20.2.4\nPygments                      2.7.1\npyparsing                     2.4.7\npython-dateutil               2.8.1\npytz                          2020.1\nrequests                      2.24.0\nscipy                         1.5.2\nsetuptools                    41.2.0\nsix                           1.15.0\nsnowballstemmer               2.0.0\nSphinx                        3.2.1\nsphinx-pyreverse              0.0.13\nsphinx-rtd-theme              0.5.0\nsphinx-tabs                   1.3.0\nsphinxcontrib-applehelp       1.0.2\nsphinxcontrib-devhelp         1.0.2\nsphinxcontrib-htmlhelp        1.0.3\nsphinxcontrib-jsmath          1.0.1\nsphinxcontrib-plantuml        0.18.1\nsphinxcontrib-qthelp          1.0.3\nsphinxcontrib-serializinghtml 1.1.4\nsphinxcontrib-websupport      1.2.4\nurllib3                       1.25.10\nWerkzeug                      1.0.1\nwheel                         0.33.1\nxlrd                          1.2.0\n</code></pre> <p>If you do not see this, you probably do not have <code>pip</code> installed on your computer. If this is the case, check out PIP Installation. </p> <p>Note</p> <p>In most cases, <code>pip</code> and <code>pip3</code> are synonymous for the Python Installation Package for Python 3. However in some cases, <code>pip</code> will be directed to the Python Installation Package for Python 2 rather than Python 3. To check this, run in the terminal:</p> <pre><code>pip --version\n</code></pre> <p>If the output indicates you this Python Installation Package is for Python 2 and not Python 3, only install packages using the <code>pip3</code> name. </p> <p>For the rest of this documentation, <code>pip</code> will be used, however if your computer's <code>pip</code>  refers to Python 2 and not Python 3, use <code>pip3</code>  instead of <code>pip</code>. </p>"},{"location":"Installation.html#atomic-simulation-environment-ase","title":"Atomic Simulation Environment (ASE)","text":"<p>The RSGC program uses the Atomic Simulation Environment (ASE) to read in the crystal data from various file format, to process the crystals, and to save the the crystals to disk. Read more about ASE here. </p> <p>The installation of ASE can be found on the ASE installation page, however from experience if you are using ASE for the first time, it is best to install ASE using <code>pip</code>, the package manager that is an extension of python to keep all your program easily managed and easy to import into your python. </p> <p>To install ASE using <code>pip</code>, perform the following in your terminal.</p> <pre><code>pip install --upgrade --user ase\n</code></pre> <p>Installing using <code>pip</code> ensures that ASE is being installed to be used by Python 3, and not Python 2. Installing ASE like this will also install all the requisite program needed for ASE. This installation includes the use of features such as viewing the xyz files of structure and looking at ase databases through a website. These should be already assessible, which you can test by entering into the terminal:</p> <pre><code>ase gui\n</code></pre> <p>This should show a GUI with nothing in it, as shown below.</p> This is a blank ase gui screen that you would see if enter ase gui into the terminal. <p>However, in the case that this does not work, we need to manually add a path to your <code>~/.bashrc</code> so you can use the ASE features externally outside python. Do the following; first enter the following into the terminal:</p> <pre><code>pip show ase\n</code></pre> <p>This will give a bunch of information, including the location of ase on your computer. For example, when I do this I get:</p> <pre><code>user@computer_name docs % pip show ase\nName: ase\nVersion: 3.20.1\nSummary: Atomic Simulation Environment\nHome-page: https://wiki.fysik.dtu.dk/ase\nAuthor: None\nAuthor-email: None\nLicense: LGPLv2.1+\nLocation: /Users/geoffreyweal/Library/Python/3.7/lib/python/site-packages\nRequires: matplotlib, scipy, numpy\nRequired-by: \n</code></pre> <p>Copy the <code>Location</code> line. If we remove the <code>lib/python/site-packages</code> bit and replace it with <code>bin</code>, this gives us the location of useful ASE programs. The example below is for Python 3.7. </p> <pre><code>/Users/geoffreyweal/Library/Python/3.7/bin\n</code></pre> <p>Next, add this to your <code>~/.bashrc</code> file as below:</p> <pre><code>############################################################\n# For ASE\nexport PATH=/Users/geoffreyweal/Library/Python/3.7/bin:$PATH\n############################################################\n</code></pre> <p>Write <code>source ~/.bashrc</code> in the terminal and press enter. Once you have done this, try to run <code>ase gui</code> in the terminal. This will hopefully show the ase gui and allow you to access the useful ASE programs through the terminal. </p>"},{"location":"Installation.html#networkx","title":"Networkx","text":"<p><code>Networkx</code> is a python program that is used in the RSGC program to describe the bonding structure between atoms in the crystal structure. The easiest way to install <code>Networkx</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user networkx\n</code></pre>"},{"location":"Installation.html#packaging","title":"Packaging","text":"<p>The <code>packaging</code> program is also used in this program to check the versions of ASE that you are using for compatibility issues. The easiest way to install <code>packaging</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user packaging\n</code></pre>"},{"location":"Installation.html#sumelf","title":"SUMELF","text":"<p>The <code>SUMELF</code> program contains several methods that are used by multiple programs in the grand scheme to obtain exciton and charge diffusion in crystals. The easiest way to install <code>SUMELF</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user SUMELF\n</code></pre> <p>However, there are other ways to install the <code>SUMELF</code> program. See the SUMELF Installation webpage for more information. </p>"},{"location":"Installation.html#tqdm","title":"TQDM","text":"<p>The <code>tqdm</code> program is used by this program to provide progress bars that are useful for easily monitoring progress during this program. The easiest way to install <code>tqdm</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user tqdm\n</code></pre>"},{"location":"Installation.html#setting-up-the-rsgc-program","title":"Setting up the RSGC Program","text":"<p>There are three ways to install RSGC on your system. These ways are described below:</p>"},{"location":"Installation.html#install-rsgc-through-pip3","title":"Install RSGC through <code>pip3</code>","text":"<p>To install the RSGC program using <code>pip3</code>, perform the following in your terminal:</p> <pre><code>pip3 install --upgrade --user git+https://github.com/geoffreyweal/RSGC.git\n</code></pre> <p>To install all related programs at the same time, performing the following in your terminal: </p> <pre><code>pip3 install --upgrade --user git+https://github.com/geoffreyweal/SUMELF.git git+https://github.com/geoffreyweal/ACSD.git git+https://github.com/geoffreyweal/ReCrystals.git git+https://github.com/geoffreyweal/RSGC.git git+https://github.com/geoffreyweal/ReJig.git git+https://github.com/geoffreyweal/ECCP.git git+https://github.com/geoffreyweal/EKMC.git git+https://github.com/geoffreyweal/SORE.git\n</code></pre>"},{"location":"Installation.html#install-rsgc-through-conda","title":"Install RSGC through <code>conda</code>","text":"<p>You can install the RSGC program on <code>conda</code> through <code>pip</code>. Click here to see more information about installing RSGC through <code>conda</code>.</p>"},{"location":"Installation.html#manual-installation","title":"Manual installation","text":"<p>First, download the RSGC program to your computer. You can do this by cloning a version of this from Github, or obtaining a version of the program from the authors. If you are obtaining this program via Github, you want to <code>cd</code> to the directory that you want to place this program in on the terminal, and then clone the program from Github through the terminal as well: </p> <pre><code>cd PATH/TO/WHERE_YOU_WANT_TO_PLACE_RSGC_ON_YOUR_COMPUTER\ngit clone https://github.com/geoffreyweal/RSGC\n</code></pre> <p>Second, you need to change permissions to use this program by using <code>chmod</code>. In the terminal write:</p> <pre><code>chmod -R 777 RSGC\n</code></pre> <p>Third, you will want to add a python path for the ASCD program to the <code>~/.bashrc</code> to indicate its location. You can do this by entering the following into the terminal and clicking enter:</p> <pre><code>echo '\n###################################\n# Used for the RSGC Program\nexport PATH_TO_RSGC=\"'$PWD'/RSGC\" \nexport PYTHONPATH=\"$PATH_TO_RSGC\":$PYTHONPATH\nexport PATH=\"$PATH_TO_RSGC\"/bin:$PATH\n###################################\n' &gt;&gt; ~/.bashrc\n</code></pre> <p>You can check that this has been entered into your <code>~/.bashrc</code> file by typing <code>vim ~/.bashrc</code> into the terminal, and scrolling down to the bottom of the terminal. </p> <p>Tip</p> <p>Make sure that the path given to <code>PATH_TO_RSGC</code> is the correct path to the RSGC folder. </p> <p>Finally, source your <code>~/.bashrc</code> file by typing the following into the terminal and pressing the enter button:</p> <pre><code>source ~/.bashrc\n</code></pre> <p>Once you have run <code>source ~/.bashrc</code>, the RSGC program should be all ready to go! You can check this by typing the following into the terminal:</p> <pre><code>which RSGC\n</code></pre> <p>This should give you the path to the RSGC program. If the terminal tells you it can not find this program, check that the path you gave for <code>PATH_TO_RSGC</code> is the correct path to the RSGC folder. </p>"},{"location":"Installation.html#summary-of-bashrc-input","title":"Summary of <code>~/.bashrc</code> input","text":"<p>You want to have the following in your <code>~/.bashrc</code>:</p> <pre><code>###################################\n# Used for the RSGC Program\nexport PATH_TO_RSGC=\"&lt;Path_to_RSGC&gt;\" \nexport PYTHONPATH=\"$PATH_TO_RSGC\":$PYTHONPATH\nexport PATH=\"$PATH_TO_RSGC\"/bin:$PATH\n###################################\n</code></pre> <p>where <code>\"&lt;Path_to_RSGC&gt;\"</code> is the directory path that you place the RSGC program. You can find this by changing directory (<code>cd</code>) into the RSGC folder and typing <code>pwd</code> into the terminal. This will give you the full path to the RSGC program. </p>"},{"location":"Preliminary_Check.html","title":"Before you Begin - Preliminary Check","text":"<p>Before running the <code>RSGC</code> program, it is a good idea to check the crystals you want to remove aliphatic sidechain from are not broken in some way.</p> <p>For example, it is common for some crystal structures to have missing hydrogens. An example is shown below for a molecule in the <code>MUPMOC</code> crystal: </p> This is the original molecule in MUPMOC, which has some missing hydrogens. <p>Here, this molecule contains several aliphatic sidechains that are just made up of sp<sup>3</sup> carbons and hydrogen atoms. However, some of the hydrogens are missing in these aliphatic sidechains. </p> <p>It is important not to assume these are fully saturated alipatic sidechain, because maybe there is infact a double bonded or triple bonded carbon sidechain and it is important to included it in your calculations. </p> <ul> <li>For example, maybe there is a double bond that is important to include in a light absorbing system because it affects the conjugated system, and therefore they affect what the energy levels are of the important molecular orbital energies. </li> <li>We could look for the signs that describe a double or triple bond, such as bond lengths and bond angles, however my experience is that in crystal structures sometimes unexpected bond lengths and angles can be found in saturated and unsaturated sidechains</li> </ul> <p>For this reason, the <code>RSGC</code> program does not assume any sidechains with missing hydrogens are saturated. </p> <p>The best way to fix or repair any molecules for any reason, including missing hydrogens, is to use the <code>ReCrystals</code> program. See the <code>ReCrystals</code> program website for more information. After using this method, you can add hydrogens to these crystal structures, as shown below:</p> This is the repaired molecule in MUPMOC, where hydrogens have now been added to the aliphatic sidechains what were missing before-hand."},{"location":"Troubleshooting.html","title":"Issues and Troubleshooting","text":"<p>The following page includes some of the issues I have faced in using the RSGC program and some of the tips and troubleshooting advice for overcoming various difficulties. </p> <p>None so far</p>"},{"location":"Troubleshooting.html#other-issues","title":"Other Issues","text":"<p>This program is definitely a \"work in progress\". I have made it as easy to use as possible, but there are always oversights to program development and some parts of it may not be as easy to use as it could be. </p> <p>If you have any issues with the program or you think there would be better/easier ways to use and implement things in the RSGC program, write a message on the RSGC Github Issues page. Feedback is very much welcome!</p>"},{"location":"Using_The_RSGC_Program.html","title":"How To Use The RSGC Program","text":"<p>The RSGC Program is designed to be versatile and be added to your existing python scripts if you want to couple the RSGC program with other methods and protocols. </p> <p>For a general use case, this is the python script you might want to set up to run the RSGC program on your existing crystals. </p> <code>Run_RSGC.py</code> python script Run_RSGC.py<pre><code>\"\"\"\nRun_RSGC.py, Geoffrey Weal, 12/4/24\n\nThis script will allow you to run the Remove SideGroups from Crystals (RSGC) program upon the crystals of interest. \n\"\"\"\nimport os, shutil\nfrom RSGC import RSGC, Hydrogen_in_Ring_Exception\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART I: Get the names of the folders holding the crystals you want to remove sidegroups from\n\n# First, give the name of the folder that contains the crystal database you want to remove sidegroups from here. \ncrystal_database_dirname = 'crystal_database'\n\n# Second, give the name of the folder that contains repaired crystals obtained from the ReCrystals program.\nrepaired_crystal_database_dirname = None # f'repaired_{crystal_database_dirname}'\n\n# Third, give the identifiers of the crystals you do not want to remove sidegroups from but may be in the databases here\nexclude_identifiers  = ['ECIGUV']\nexclude_identifiers += ['XEZCOX', 'XEZDAK']\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part II: Determine settings for running the RSGC program.\n\n# Fourth, Determine if you want any saturated aliphatic groups to be replaced with\n#         * Ethyl group (set this to True), or\n#         * Methyl group (set this to False). \nleave_as_ethyls = True\n\n# Fifth, determine if you also want to save the molecules from the crystals individually, \n#        as well as save the full crystal.\nsave_molecules_individually = True\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part III: Check that the folders of the databases exist.\n\n# Sixth, check that the crystal database you gave exists. \nif not os.path.exists(crystal_database_dirname):\n    raise Exception(f'Error: {crystal_database_dirname} does not exist in {os.getcwd()}')\n\n# Seventh, check that the crystal database holding reparred crystals you gave exists.\nif (repaired_crystal_database_dirname is not None) and (not os.path.exists(repaired_crystal_database_dirname)):\n    raise Exception(f'Error: {crystal_database_dirname} does not exist in {os.getcwd()}')\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part VI: Get the paths to the crystals you want to remove sidegroups from.\n\n# Eighth, get the names of the files contained in the crystal database folder.\ncrystal_database_filenames = sorted(os.listdir(crystal_database_dirname))\n\n# Ninth, get the names of the files contained in the repaired crystal database folder.\nrepaired_crystal_database_filenames = sorted(os.listdir(repaired_crystal_database_dirname)) if (repaired_crystal_database_dirname is not None) else []\n\n# Tenth, initalise the list to hold all the paths to the crystals to remove sidegroups from.\nfilepath_names = []\n\n# Eleventh, obtain all the paths to the crystals to remove sidegroups from.\nfor crystal_database_filename in crystal_database_filenames:\n\n    # 11.1: Make sure that the file ends with \".xyz\"\"\n    if not crystal_database_filename.endswith('.xyz'):\n        continue\n\n    # 11.2: Get the name of the identifier for this crystal. \n    crystal_identifier = crystal_database_filename.replace('.xyz','')\n\n    # 11.3: If the crystal is in the exclude_identifiers list, don't process it.\n    if crystal_identifier in exclude_identifiers:\n        continue\n\n    # 11.4: Check if the crystal is in the repaired crystal database folder. \n    #        * If it is, take the crystal from the repaired folder rather than the original folder. \n    crystal_folder_name = repaired_crystal_database_dirname if (crystal_database_filename in repaired_crystal_database_filenames) else crystal_database_dirname\n\n    # 11.5: Add the path to the crystal file to the filepath_names list.\n    filepath_names.append(crystal_folder_name+'/'+crystal_database_filename)\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART V: Reset RSGC files from previous RSGC runs\n\n# Twelfth, reset the RSGC files.  \n\n# 12.1: Remove the folder that we will place crystals in that we will remove sidegroups from.\ncrystal_database_with_removed_sidegroups_folder_name = f'{crystal_database_dirname}_with_removed_sidegroups'\nif os.path.exists(crystal_database_with_removed_sidegroups_folder_name):\n    shutil.rmtree(crystal_database_with_removed_sidegroups_folder_name)\n\n# 12.2: Remove the file indicating what issues were found when running the RSGC program. \nif os.path.exists('RSGC_issues.txt'):\n    os.remove('RSGC_issues.txt')\n\n# 12.3: Remove the file containing which rings contain hydrogens in them when running the RSGC program. \nif os.path.exists('Rings_with_hydrogens_in_them.txt'):\n    os.remove('Rings_with_hydrogens_in_them.txt')\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART VI: Run the RSGC program on the crystals you want to remove sidegroups from\n\n# Thirteenth, run the RSGC program on the crystals you want to remove sidegroups from\n\n# 13.1: Obtain the total number of crystal you want to process with the RSGC program. \ntotal_no_of_crystals = str(len(filepath_names))\n\n# 13.2: Set a counter to record successful RSGC executions.\nsuccessful = 0\n\n# 13.3: For each crystal in the filepath_names list. \nfor counter, filepath in enumerate(filepath_names, start=0):\n\n    # 13.4: Print to screen how many crystals have been processed by the RSGC program. \n    print('Running crystal: '+str(counter)+' out of '+total_no_of_crystals)\n\n    # 13.5: Run the RSGC program. \n    try:\n\n        # 13.5.1: Run the RSGC program. \n        RSGC(filepath, leave_as_ethyls=leave_as_ethyls, save_molecules_individually=save_molecules_individually)\n\n        # 13.5.2: Record the successful result. \n        successful += 1\n\n    except Hydrogen_in_Ring_Exception as exception_message:\n\n        # 13.5.3: If there was an issue with the RSGC program, write the issue in the 'RSGC_issues.txt' file\n        with open('RSGC_issues.txt','a+') as issuesTXT:\n            issuesTXT.write(filepath+': '+str(exception_message)+'\\n')\n\n# 13.6: Report the number of successful executions.\nprint('========================')\nprint('Number of successfuls: '+str(successful))\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre> <p>Below we describe the <code>Run_RSGC.py</code> python script above so you can understand how it works.</p>"},{"location":"Using_The_RSGC_Program.html#part-i-get-the-names-of-the-crystals-you-want-to-remove-sidegroups-from","title":"Part I: Get the names of the crystals you want to remove sidegroups from","text":"<p>In the first section, give the name of the folder that contains the crystals you want to remove sidegroups from in the <code>crystal_database_dirname</code> variable. Change these variables to the names of your files and folders. The names of the files and folders you need to give here are: </p> <ul> <li>Also give the name of the folder containing the crystals that were repaired during the <code>RSGC</code> program in the <code>repaired_crystal_database_dirname</code> variable. </li> <li>If you don't want to give a <code>repaired_crystal_database_dirname</code> variable, set it to <code>None</code>. (i.e: <code>repaired_crystal_database_dirname = None</code>).</li> <li>If there are any crystal you are having problems with and you want to exclude them in the meantime, put them in the <code>exclude_identifiers</code> list.</li> </ul> <p>An example of the code for <code>PART I</code> is shown below:</p> Part I of Run_RSGC.py: Get the names of the crystals you want to remove sidegroups from<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART I: Get the names of the folders holding the crystals you want to remove sidegroups from\n\n# First, give the name of the folder that contains the crystal database you want to remove sidegroups from here. \ncrystal_database_dirname = 'crystal_database'\n\n# Second, give the name of the folder that contains repaired crystals obtained from the ReCrystals program.\nrepaired_crystal_database_dirname = None # f'repaired_{crystal_database_dirname}'\n\n# Third, give the identifiers of the crystals you do not want to remove sidegroups from but may be in the databases here\nexclude_identifiers  = ['ECIGUV']\nexclude_identifiers += ['XEZCOX', 'XEZDAK']\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#part-ii-determine-settings","title":"Part II: Determine settings","text":"<p>In the second section, determine the settings for running the RGSC program. Change these to the settings you desire. The variable settings you can set here are:</p> <ul> <li><code>leave_as_ethyls</code> (bool.): This indicates if you want to change any saturated aliphatic sidechain into ethyl groups, in which case set this to <code>True</code>. If you would want change these saturated aliphatic sidechain into methyl groups, set this to <code>False</code>.</li> <li><code>save_molecules_individually</code> (bool.): This indicates if you want to save the molecules from the crystals individually, as well as save the full crystal.</li> </ul> <p>An example of the code for <code>PART II</code> is shown below:</p> Part II of Run_RSGC.py: Determine settings<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part II: Determine settings for running the RSGC program.\n\n# Fourth, Determine if you want any saturated aliphatic groups to be replaced with\n#         * Ethyl group (set this to True), or\n#         * Methyl group (set this to False). \nleave_as_ethyls = True\n\n# Fifth, determine if you also want to save the molecules from the crystals individually, \n#        as well as save the full crystal.\nsave_molecules_individually = True\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#part-iii-database-checks","title":"Part III: Database checks","text":"<p>In the third section, check that the crystal databases exist. You can leave this as is, or modify it as you would like. An example of the code for <code>PART III</code> is shown below:</p> Part III of Run_RSGC.py: Database checks<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part III: Check that the folders of the databases exist.\n\n# Sixth, check that the crystal database you gave exists. \nif not os.path.exists(crystal_database_dirname):\n    raise Exception(f'Error: {crystal_database_dirname} does not exist in {os.getcwd()}')\n\n# Seventh, check that the crystal database holding reparred crystals you gave exists.\nif (repaired_crystal_database_dirname is not None) and (not os.path.exists(repaired_crystal_database_dirname)):\n    raise Exception(f'Error: {crystal_database_dirname} does not exist in {os.getcwd()}')\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#part-iv-gather-the-paths-to-the-crystal-files","title":"Part IV: Gather the paths to the crystal files","text":"<p>In the fourth section, gather all the paths of the crystal files you want to remove. You can leave this as is, or modify it as you would like. An example of the code for <code>PART IV</code> is shown below:</p> Part IV of Run_RSGC.py: Gather the paths to the crystal files<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# Part VI: Get the paths to the crystals you want to remove sidegroups from.\n\n# Eighth, get the names of the files contained in the crystal database folder.\ncrystal_database_filenames = sorted(os.listdir(crystal_database_dirname))\n\n# Ninth, get the names of the files contained in the repaired crystal database folder.\nrepaired_crystal_database_filenames = sorted(os.listdir(repaired_crystal_database_dirname)) if (repaired_crystal_database_dirname is not None) else []\n\n# Tenth, initalise the list to hold all the paths to the crystals to remove sidegroups from.\nfilepath_names = []\n\n# Eleventh, obtain all the paths to the crystals to remove sidegroups from.\nfor crystal_database_filename in crystal_database_filenames:\n\n    # 11.1: Make sure that the file ends with \".xyz\"\"\n    if not crystal_database_filename.endswith('.xyz'):\n        continue\n\n    # 11.2: Get the name of the identifier for this crystal. \n    crystal_identifier = crystal_database_filename.replace('.xyz','')\n\n    # 11.3: If the crystal is in the exclude_identifiers list, don't process it.\n    if crystal_identifier in exclude_identifiers:\n        continue\n\n    # 11.4: Check if the crystal is in the repaired crystal database folder. \n    #        * If it is, take the crystal from the repaired folder rather than the original folder. \n    crystal_folder_name = repaired_crystal_database_dirname if (crystal_database_filename in repaired_crystal_database_filenames) else crystal_database_dirname\n\n    # 11.5: Add the path to the crystal file to the filepath_names list.\n    filepath_names.append(crystal_folder_name+'/'+crystal_database_filename)\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#part-v-remove-existing-files-from-previous-rsgc-runs","title":"Part V: Remove existing files from previous RSGC runs","text":"<p>In the fifth section, remove any existing files that were produced during previous RSGC runs. You can leave this as is, or modify it as you would like.  An example of the code for <code>PART V</code> is shown below:</p> Part V of Run_RSGC.py: Remove existing files from previous RSGC runs<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART V: Reset RSGC files from previous RSGC runs\n\n# Twelfth, reset the RSGC files.  \n\n# 12.1: Remove the folder that we will place crystals in that we will remove sidegroups from.\ncrystal_database_with_removed_sidegroups_folder_name = f'{crystal_database_dirname}_with_removed_sidegroups'\nif os.path.exists(crystal_database_with_removed_sidegroups_folder_name):\n    shutil.rmtree(crystal_database_with_removed_sidegroups_folder_name)\n\n# 12.2: Remove the file indicating what issues were found when running the RSGC program. \nif os.path.exists('RSGC_issues.txt'):\n    os.remove('RSGC_issues.txt')\n\n# 12.3: Remove the file containing which rings contain hydrogens in them when running the RSGC program. \nif os.path.exists('Rings_with_hydrogens_in_them.txt'):\n    os.remove('Rings_with_hydrogens_in_them.txt')\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#part-vi-run-the-rsgc-program","title":"Part VI: Run the RSGC program","text":"<p>In the sixth section, remove sidegroups from all your crystals of interest using the RSGC program. You can leave this as is, or modify it as you would like.  An example of the code for <code>PART VI</code> is shown below:</p> Part VI of Run_RSGC.py: Run the RSGC program<pre><code># - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n# PART VI: Run the RSGC program on the crystals you want to remove sidegroups from\n\n# Thirteenth, run the RSGC program on the crystals you want to remove sidegroups from\n\n# 13.1: Obtain the total number of crystal you want to process with the RSGC program. \ntotal_no_of_crystals = str(len(filepath_names))\n\n# 13.2: Set a counter to record successful RSGC executions.\nsuccessful = 0\n\n# 13.3: For each crystal in the filepath_names list. \nfor counter, filepath in enumerate(filepath_names, start=0):\n\n    # 13.4: Print to screen how many crystals have been processed by the RSGC program. \n    print('Running crystal: '+str(counter)+' out of '+total_no_of_crystals)\n\n    # 13.5: Run the RSGC program. \n    try:\n\n        # 13.5.1: Run the RSGC program. \n        RSGC(filepath, leave_as_ethyls=leave_as_ethyls, save_molecules_individually=save_molecules_individually)\n\n        # 13.5.2: Record the successful result. \n        successful += 1\n\n    except Hydrogen_in_Ring_Exception as exception_message:\n\n        # 13.5.3: If there was an issue with the RSGC program, write the issue in the 'RSGC_issues.txt' file\n        with open('RSGC_issues.txt','a+') as issuesTXT:\n            issuesTXT.write(filepath+': '+str(exception_message)+'\\n')\n\n# 13.6: Report the number of successful executions.\nprint('========================')\nprint('Number of successfuls: '+str(successful))\n\n# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre>"},{"location":"Using_The_RSGC_Program.html#output-from-the-rsgc-program","title":"Output from the RSGC Program","text":"<p>The RSGC program will create a folder called <code>crystals_with_sidechains_removed</code> and save the xyz files of the crystals given in your <code>Run_RSGC.py</code> script that you want to remove the aliphatic sidechains of. </p> <ul> <li>Another folder called <code>crystals_with_sidechains_removed_molecules</code> will also be created. This will contain the <code>xyz</code> files of the individual molecules from your crystal files. This folder is purely created to allow you to check the molecules that make up your crystal, and make it easier to double-check that only the alphatic sidechains that only contain sp<sup>3</sup> carbons and hydrogens have been removed. </li> </ul> <p>As well as the  <code>crystals_with_sidechains_removed</code> and <code>crystals_with_sidechains_removed_molecules</code> folders, the RSGC program will also create a file called <code>RSGC_issues.txt</code> that will record any warning messages produced while the RSGC program. </p>"},{"location":"Using_The_RSGC_Program.html#example-output-files-from-the-rsgc-program","title":"Example Output Files from the RSGC Program","text":"<p>Click here to find examples of crystals from the CCDC that have been repaired with the instructions from a <code>Run_RSGC.py</code> file. </p>"}]}